passport.use(new FacebookStrategy({
    clientID: FACEBOOK_CLIENT_ID,
    clientSecret:FACEBOOK_CLIENT_SECRET,
    callbackURL:'http://localhost:5000/auth/facebook/callback',
    profileFields: ['id', 'emails', 'name']
},
    async function(accessToken, refreshToken, profile, done) {
        console.log(profile)
          /* let user=await MyUsers.findOne({where:{email: profile._json.email}});
            if(!user){
                await MyUsers.create({email: profile._json.email,name:profile._json.name,  })
            }
            return done(null, user); */
    }
))

passport.use(new GithubStrategy({
    clientID: GITHUB_CLIENT_ID,
    clientSecret:GITHUB_CLIENT_SECRET,
    callbackURL:'http://localhost:5000/auth/github/callback',
    profileFields: ['id', 'emails']
},
    async function(accessToken, refreshToken, profile, done) {
        console.log(profile.emails)
          /* let user=await MyUsers.findOne({where:{email: profile._json.email}});
            if(!user){
                await MyUsers.create({email: profile._json.email,name:profile._json.name,  })
            }
            return done(null, user); */
    }
))

const scopes = ['identify', 'email', 'guilds', 'guilds.join'];

passport.use(new DiscordStrategy({
    clientID: DISCORD_CLIENT_ID,
    clientSecret:DISCORD_CLIENT_SECRET,
    callbackURL:'http://localhost:5000/auth/discord/callback',
    scope: scopes
},
    async function(accessToken, refreshToken, profile, done) {
        console.log(profile)
          /* let user=await MyUsers.findOne({where:{email: profile._json.email}});
            if(!user){
                await MyUsers.create({email: profile._json.email,name:profile._json.name,  })
            }
            return done(null, user); */
    }
))